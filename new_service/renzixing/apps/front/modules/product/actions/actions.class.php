<?php
// auto-generated by sfPropelCrud
// date: 2008/04/20 13:42:54
?>
<?php

/**
 * product actions.
 *
 * @package    renzixing
 * @subpackage product
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class productActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('product', 'list');
  }

  public function executeList()
  {
    $this->products = ProductPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->product = ProductPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->product);
  }

  public function executeCreate()
  {
    $this->product = new Product();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->product = ProductPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->product);
  }

  public function executeUpdateXX()
  {
    if (!$this->getRequestParameter('id'))
    {
      $product = new Product();
    }
    else
    {
      $product = ProductPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($product);
    }

    $product->setId($this->getRequestParameter('id'));
    if ($this->getRequestParameter('ordered_at'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('ordered_at'), $this->getUser()->getCulture());
      $product->setOrderedAt("$y-$m-$d");
    }
    if ($this->getRequestParameter('installed_at'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('installed_at'), $this->getUser()->getCulture());
      $product->setInstalledAt("$y-$m-$d");
    }
    if ($this->getRequestParameter('completed_at'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('completed_at'), $this->getUser()->getCulture());
      $product->setCompletedAt("$y-$m-$d");
    }
    if ($this->getRequestParameter('warranty_begin'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('warranty_begin'), $this->getUser()->getCulture());
      $product->setWarrantyBegin("$y-$m-$d");
    }
    if ($this->getRequestParameter('warranty_end'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('warranty_end'), $this->getUser()->getCulture());
      $product->setWarrantyEnd("$y-$m-$d");
    }
    $product->setSaleContact($this->getRequestParameter('sale_contact'));
    $product->setSalePhone($this->getRequestParameter('sale_phone'));
    $product->setName($this->getRequestParameter('name'));
    $product->setCustomerId($this->getRequestParameter('customer_id'));
    $product->setUserId($this->getRequestParameter('user_id'));
    $product->setStyle($this->getRequestParameter('style'));
    $product->setUseType($this->getRequestParameter('use_type'));
    $product->setAmount($this->getRequestParameter('amount'));
    $product->setInstallDetail($this->getRequestParameter('install_detail'));

    $product->save();

    return $this->redirect('product/show?id='.$product->getId());
  }

  public function executeDelete()
  {
    $product = ProductPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($product);

    $product->delete();

    return $this->redirect('product/list');
  }



  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $product = new Product();
    }
    else
    {
      $product = ProductPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($product);
    }

    $product->setId($this->getRequestParameter('id'));
    if ($this->getRequestParameter('ordered_at'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('ordered_at'), $this->getUser()->getCulture());
      $product->setOrderedAt("$y-$m-$d");
    }
    if ($this->getRequestParameter('installed_at'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('installed_at'), $this->getUser()->getCulture());
      $product->setInstalledAt("$y-$m-$d");
    }
    if ($this->getRequestParameter('completed_at'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('completed_at'), $this->getUser()->getCulture());
      $product->setCompletedAt("$y-$m-$d");
    }
    if ($this->getRequestParameter('warranty_begin'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('warranty_begin'), $this->getUser()->getCulture());
      $product->setWarrantyBegin("$y-$m-$d");
    }
    if ($this->getRequestParameter('warranty_end'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('warranty_end'), $this->getUser()->getCulture());
      $product->setWarrantyEnd("$y-$m-$d");
    }
    $product->setSaleContact($this->getRequestParameter('sale_contact'));
    $product->setSalePhone($this->getRequestParameter('sale_phone'));
    $product->setName($this->getRequestParameter('name'));
    $product->setCustomerId($this->getRequestParameter('customer_id'));
    $product->setUserId($this->getRequestParameter('user_id'));
    $product->setStyle($this->getRequestParameter('style'));
    $product->setUseType($this->getRequestParameter('use_type'));
    $product->setAmount($this->getRequestParameter('amount'));
    $product->setInstallDetail($this->getRequestParameter('install_detail'));

    $product->save();

    return $this->redirect('product/show?id='.$product->getId());
  }

}
