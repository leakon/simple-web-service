<?php
// auto-generated by sfPropelCrud
// date: 2008/04/12 09:31:44
?>
<?php

/**
 * issue actions.
 *
 * @package    renzixing
 * @subpackage issue
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class issueActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('issue', 'list');
  }


  public function executeShowxxxx()
  {
    $this->issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->issue);
  }

  public function executeCreate()
  {
    $this->issue = new Issue();

    $this->setTemplate('edit');
  }



  public function executeDelete()
  {
    $issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($issue);

    $issue->delete();

    return $this->redirect('issue/list');
  }


	public function executeList() {
		// 带翻页的列表
		$this->objPager = IssuePeer::listIssues($this->getRequestParameter('page', 1));

	}

	public function executeSearch() {
		// 带翻页的列表
		$this->setTemplate('list');
		$this->objPager = IssuePeer::searchIssues($this->getRequestParameter('page', 1));

	}

	// 与我有关的
	public function executeInvolved() {
		// 带翻页的列表
		$this->setTemplate('list');
		$this->objPager = IssuePeer::searchIssues($this->getRequestParameter('page', 1));

	}



	// 浏览 Issue
	public function executeShow() {
	#	$this->issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));
	#	$this->forward404Unless($this->issue);

	#	$this->setTemplate('edit');
	#	$this->justViewIssues	= true;
		$this->allIssues	= IssuePeer::getGroupedIssue($this->getRequestParameter('id'));

	}


	// 处理 Issue

	public function executeDeal() {

		$sfUserId	= $this->getUser()->getId();

		$this->setTemplate('edit');

		$baseId	= $this->getRequestParameter('id');

		$this->allIssues	= IssuePeer::getGroupedIssue($baseId);

	#	var_dump(count($this->allIssues));

		$baseName		= IssuePeer::getTypeString(IssuePeer::TYPE_AGENCY, 2);

		// 如果没有最基本的 TYPE_AGENCY，就跳到错误页
		$this->forward404Unless(isset($this->allIssues[$baseName]));

		$prevStatus	= 0;

		foreach (IssuePeer::listAllTypes() as $intType => $strType) {

			$issue	= isset($this->allIssues[$strType]) ? $this->allIssues[$strType] : null;

			// 存在
			if ($issue) {

				$prevStatus	= 0;

				// 是否已经提交了上级单位
				if ($issue->getStatus() == IssuePeer::STATUS_SUBMITTED) {
					$prevStatus	= $issue->getStatus();
					continue;
				}

				// 检查权限

				// 在编辑状态中
				if ($issue->getStatus() < IssuePeer::STATUS_SUBMITTED) {

					if ($issue->getUserId() != $sfUserId) {
						$uri	= sprintf('issue/show?id=%s&message=%s', $baseId, 'IssueLocked');
						return	$this->redirect($uri);
					}

					break;

				}

				$prevStatus	= 0;

			} else {
				// 不存在，创建并退出

				// 前一个状态必须是 submitted
				if ($prevStatus == IssuePeer::STATUS_SUBMITTED) {

					$newIssue	= new Issue();

					$newIssue->setUserId($sfUserId);
					$newIssue->setParentId($baseId);
					$newIssue->setType($intType);

					$newIssue->save();

					$this->allIssues[$strType]	= $newIssue;
				}

				break;

			}


		}

	#	HelperView::pr(IssuePeer::listAllTypes());


	}


	// 编辑 Issue
	public function executeEdit() {


		$this->allIssues	= IssuePeer::getGroupedIssue($this->getRequestParameter('id'));

	#	$this->issue	= $this->allIssues['Agency'];

	}



	public function executeUpdate() {

		if (!$this->getRequestParameter('id')) {
			$issue = new Issue();
		} else {
			$issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));
			$this->forward404Unless($issue);
		}


		// 公共部分
		$issue->setId($this->getRequestParameter('id'));
		$issue->setPriority($this->getRequestParameter('priority'));
		$issue->setTitle($this->getRequestParameter('title'));
		$issue->setDescription($this->getRequestParameter('description'));
		$issue->setSolution($this->getRequestParameter('solution'));;
		$issue->setReference($this->getRequestParameter('reference'));
		$issue->setStatus($this->getRequestParameter('status'));


		$issue->setType($this->getRequestParameter('type'));

		$typeString	= $issue->getTypeString();
		$method		= sprintf("saveEdit%s", $typeString);


		$issue->$method($this);


		$issue->handleDecision();


		#    var_dump($this->getRequestParameter('status'));
		/*

		$issue->setId($this->getRequestParameter('id'));
		$issue->setUserId($this->getRequestParameter('user_id'));
		$issue->setPriority($this->getRequestParameter('priority'));
		$issue->setTitle($this->getRequestParameter('title'));
		$issue->setDescription($this->getRequestParameter('description'));
		$issue->setSolution($this->getRequestParameter('solution'));
		$issue->setReference($this->getRequestParameter('reference'));


		$issue->setType($this->getRequestParameter('type'));
		$issue->setStatus($this->getRequestParameter('status'));

		$issue->save();
		*/

	#	echo	231234;exit;

		return $this->redirect('issue/edit?id='.$issue->getBaseId());


	#	return $this->redirect('issue/show?id='.$issue->getId());
	}

}
