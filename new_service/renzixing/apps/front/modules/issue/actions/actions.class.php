<?php
// auto-generated by sfPropelCrud
// date: 2008/04/12 09:31:44
?>
<?php

/**
 * issue actions.
 *
 * @package    renzixing
 * @subpackage issue
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class issueActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('issue', 'list');
  }


  public function executeShow()
  {
    $this->issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->issue);
  }

  public function executeCreate()
  {
    $this->issue = new Issue();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->issue);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $issue = new Issue();
    }
    else
    {
      $issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($issue);
    }


#    var_dump($this->getRequestParameter('save_type'));


    $issue->setId($this->getRequestParameter('id'));
    $issue->setUserId($this->getRequestParameter('user_id'));
    $issue->setPriority($this->getRequestParameter('priority'));
    $issue->setTitle($this->getRequestParameter('title'));
    $issue->setDescription($this->getRequestParameter('description'));
    $issue->setSolution($this->getRequestParameter('solution'));
    $issue->setReference($this->getRequestParameter('reference'));


    $issue->setType($this->getRequestParameter('type'));
    $issue->setStatus($this->getRequestParameter('save_type'));

    $issue->save();

    return $this->redirect('issue/show?id='.$issue->getId());
  }

  public function executeDelete()
  {
    $issue = IssuePeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($issue);

    $issue->delete();

    return $this->redirect('issue/list');
  }


	public function executeList() {
		// 带翻页的列表
		$this->objPager = IssuePeer::listIssues($this->getRequestParameter('page', 1));

	}

	public function executeSearch() {
		// 带翻页的列表
		$this->setTemplate('list');
		$this->objPager = IssuePeer::searchIssues($this->getRequestParameter('page', 1));

	}

	// 与我有关的
	public function executeInvolved() {
		// 带翻页的列表
		$this->setTemplate('list');
		$this->objPager = IssuePeer::searchIssues($this->getRequestParameter('page', 1));

	}

}
