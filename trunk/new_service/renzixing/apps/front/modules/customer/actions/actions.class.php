<?php
// auto-generated by sfPropelCrud
// date: 2008/04/20 08:35:16
?>
<?php

/**
 * customer actions.
 *
 * @package    renzixing
 * @subpackage customer
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class customerActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('customer', 'list');
  }

  public function executeListXXX()
  {
    $this->customers = CustomerPeer::doSelect(new Criteria());
  }

  public function executeCreate()
  {
    $this->customer = new Customer();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->customer = CustomerPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->customer);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $customer = new Customer();
    }
    else
    {
      $customer = CustomerPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($customer);
    }

    $customer->setId($this->getRequestParameter('id'));
    $customer->setName($this->getRequestParameter('name'));
    $customer->setArea($this->getRequestParameter('area'));
    $customer->setCity($this->getRequestParameter('city'));
    $customer->setFirstContact($this->getRequestParameter('first_contact'));
    $customer->setFirstPhoneA($this->getRequestParameter('first_phone_a'));
    $customer->setFirstPhoneB($this->getRequestParameter('first_phone_b'));
    $customer->setFirstPhoneC($this->getRequestParameter('first_phone_c'));
    $customer->setSecondContact($this->getRequestParameter('second_contact'));
    $customer->setSecondPhoneA($this->getRequestParameter('second_phone_a'));
    $customer->setSecondPhoneB($this->getRequestParameter('second_phone_b'));
    $customer->setSecondPhoneC($this->getRequestParameter('second_phone_c'));
    $customer->setAddress($this->getRequestParameter('address'));
    $customer->setPostCode($this->getRequestParameter('post_code'));

    $customer->save();

    return $this->redirect('customer/show?id='.$customer->getId());
  }

  public function executeDelete()
  {
    $customer = CustomerPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($customer);

    $customer->delete();

    return $this->redirect('customer/list');
  }





	public function executeList() {
		// 带翻页的列表

		$pager = new sfPropelPager('Customer', 3);
		$c = new Criteria();
		$c->addAscendingOrderByColumn(CustomerPeer::NAME);
		$pager->setCriteria($c);
		$pager->setPage($this->getRequestParameter('page', 1));
		$pager->init();

		$this->objPager = $pager;


	}


	public function executeShow() {


		$customerId	= $this->getRequestParameter('id');

		$this->customer = CustomerPeer::retrieveByPk($customerId);
		$this->forward404Unless($this->customer);


		$c = new Criteria();
		$c->add(ProductPeer::CUSTOMER_ID, $customerId);
		$c->addAscendingOrderByColumn(ProductPeer::ID);

		$arrProducts	= ProductPeer::doSelect($c);

		$this->arrProducts	= $arrProducts;


	}

}
